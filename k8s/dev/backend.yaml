apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
data:
  application.yml: |-
    spring:
      profiles:
        active: production
      jpa:
        hibernate:
          ddl-auto: validate
        open-in-view: false
      flyway:
        enabled: true
      datasource:
        url: 'jdbc:postgresql://postgres:5432/backend'
        username: postgres
        password: postgres
      security:
        oauth2:
          resourceserver:
            jwt:
              issuer-uri: https://dev.thingoo.xyz/auth/realms/Thingoo
              jwk-set-uri: http://keycloak:8080/auth/realms/Thingoo/protocol/openid-connect/certs
    server:
      port: 8080
      servlet:
        contextPath: /api
    app:
      cors-origins: http://localhost:4200, https://dev.thingoo.xyz, https://thingoo.xyz
      keycloak:
        auth-server-url: http://keycloak:8080/auth
        realm: Thingoo
        admin-username: admin
        admin-password: password
        webapp-client-id: thingoo-webapp
        device-client-id: thingoo-device
        external-auth-server-url: https://dev.thingoo.xyz/auth

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: backend
  name: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      name: backend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        name: backend
    spec:
      containers:
        - image: 'thingookni/backend:${BACKEND_TAG}'
          imagePullPolicy: Always
          name: backend
          ports:
            - containerPort: 8080
          volumeMounts:
            - mountPath: "/etc/spring/config"
              name: backend-config
              readOnly: true
      restartPolicy: Always
      volumes:
        - name: backend-config
          configMap:
            name: backend-config
            items:
              - key: application.yml
                path: application.yml

---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: backend
  name: backend
spec:
  selector:
    name: backend
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
